**Schema (PostgreSQL v15)**

    CREATE TABLE country (
    country_id INT PRIMARY KEY,
    country_name VARCHAR(50),
    head_office VARCHAR(50)
    );
    --------------------
    INSERT INTO country (country_id, country_name, head_office)
    VALUES (1, 'UK', 'London'),
    (2, 'USA', 'New York'),
    (3, 'China', 'Beijing');
    --------------------
    CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    first_shop DATE,
    age INT,
    rewards VARCHAR(50),
    can_email VARCHAR(50)
    );
    --------------------
    INSERT INTO customers (customer_id, first_shop, age, rewards, can_email)
    VALUES (1, '2022-03-20', 23, 'yes', 'no'),
    (2, '2022-03-25', 26, 'no', 'no'),
    (3, '2022-04-06', 32, 'no', 'no'),
    (4, '2022-04-13', 25, 'yes', 'yes'),
    (5, '2022-04-22', 49, 'yes', 'yes'),
    (6, '2022-06-18', 28, 'yes', 'no'),
    (7, '2022-06-30', 36, 'no', 'no'),
    (8, '2022-07-04', 37, 'yes', 'yes');
    --------------------
    CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    date_shop DATE,
    sales_channel VARCHAR(50),
    country_id INT,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (country_id) REFERENCES country(country_id)
    );
    --------------------
    INSERT INTO orders (order_id, customer_id, date_shop, sales_channel, country_id)
    VALUES (1, 1, '2023-01-16', 'retail', 1),
    (2, 4, '2023-01-20', 'retail', 1),
    (3, 2, '2023-01-25', 'retail', 2),
    (4, 3, '2023-01-25', 'online', 1),
    (5, 1, '2023-01-28', 'retail', 3),
    (6, 5, '2023-02-02', 'online', 1),
    (7, 6, '2023-02-05', 'retail', 1),
    (8, 3, '2023-02-11', 'online', 3);
    --------------------
    CREATE TABLE products (
    product_id INT PRIMARY KEY,
    category VARCHAR(50),
    price NUMERIC(5,2)
    );
    --------------------
    INSERT INTO products (product_id, category, price)
    VALUES (1, 'food', 5.99),
    (2, 'sports', 12.49),
    (3, 'vitamins', 6.99),
    (4, 'food', 0.89),
    (5, 'vitamins', 15.99);
    --------------------
    CREATE TABLE baskets (
    order_id INT,
    product_id INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
    );
    --------------------
    INSERT INTO baskets (order_id, product_id)
    VALUES (1, 1),
    (1, 2),
    (1, 5),
    (2, 4),
    (3, 3),
    (4, 2),
    (4, 1),
    (5, 3),
    (5, 5),
    (6, 4),
    (6, 3),
    (6, 1),
    (7, 2),
    (7, 1),
    (8, 3),
    (8, 3);

---

**Query #1**

    SELECT DISTINCT(country_name) FROM country;

| country_name |
| ------------ |
| China        |
| UK           |
| USA          |

---
**Query #2**

    SELECT DISTINCT COUNT(customer_id) FROM customers;

| count |
| ----- |
| 8     |

---
**Query #3**

    SELECT ROUND(AVG(age)) AS average_age FROM customers 
    WHERE can_email = 'yes';

| average_age |
| ----------- |
| 37          |

---
**Query #4**

    SELECT COUNT(order_id) FROM orders
    JOIN customers ON customers.customer_id = orders.customer_id
    WHERE age >= '30';

| count |
| ----- |
| 3     |

---
**Query #5**

    SELECT category,SUM(price) AS total_revenue FROM products
    GROUP BY category
    ORDER BY total_revenue DESC;

| category | total_revenue |
| -------- | ------------- |
| vitamins | 22.98         |
| sports   | 12.49         |
| food     | 6.88          |

---
**Query #6**

    SELECT ROUND(AVG(price)) AS average_price_of_food FROM products
    WHERE category = 'food';

| average_price_of_food |
| --------------------- |
| 3                     |

---
**Query #7**

    SELECT sales_channel,COUNT(sales_channel) FROM orders
    GROUP BY sales_channel;

| sales_channel | count |
| ------------- | ----- |
| online        | 3     |
| retail        | 5     |

---
**Query #8**

    SELECT MAX(date_shop) FROM orders
    JOIN customers ON customers.customer_id = orders.customer_id
    WHERE customers.can_email = 'no';

| max                      |
| ------------------------ |
| 2023-02-11T00:00:00.000Z |

---
**Query #9**

    SELECT country_name,COUNT(*) AS total_count FROM country
    JOIN orders ON orders.country_id = country.country_id
    GROUP BY country_name
    ORDER BY total_count DESC
    LIMIT 1;

| country_name | total_count |
| ------------ | ----------- |
| UK           | 5           |

---
**Query #10**

    SELECT ROUND(AVG(age)) AS average_age FROM customers
    JOIN orders ON orders.customer_id = customers.customer_id
    JOIN baskets ON baskets.order_id = orders.order_id
    JOIN products ON products.product_id = baskets.product_id
    WHERE category = 'vitamins';

| average_age |
| ----------- |
| 30          |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/rGPh7BmJUVAMdX4VK3ckbn/0)
